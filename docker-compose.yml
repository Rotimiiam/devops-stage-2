version: "3.8"

services:
  # Traefik Reverse Proxy
  traefik:
    image: traefik:v2.9
    command:
      - "--api.insecure=true"  # Enable Traefik Dashboard
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"  # HTTP
      - "--certificatesresolvers.mytlschallenge.acme.tlschallenge=true"
      - "--certificatesresolvers.mytlschallenge.acme.email=your-email@example.com"
      - "--certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"  # HTTP
      - "443:443"  # HTTPS (if you want to use HTTPS, you need to configure SSL certificates as well)
      - "8080:8080"  # Traefik Dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
    networks:
      - web

  # React Frontend
  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:5143"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`localhost`) && PathPrefix(`/`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=5143"  # Match this port with your frontend's internal port
    networks:
      - web
    depends_on:
      - backend

  # FastAPI Backend
  backend:
    build:
      context: ./backend
    ports:
      - "8000:8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`localhost`) && PathPrefix(`/api`)"
      - "traefik.http.routers.docs.rule=Host(`localhost`) && PathPrefix(`/docs`)"
      - "traefik.http.middlewares.backend-strip-api.stripprefix.prefixes=/api"
      - "traefik.http.middlewares.backend-strip-docs.stripprefix.prefixes=/docs"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
    env_file:
      - ./backend/.env
    depends_on:
      - postgres
    networks:
      - web
    environment:
      PYTHONPATH: /app
    command: bash -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000"

  # PostgreSQL Database
  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    env_file:
      - ./backend/.env  
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - web

  # Adminer (DB management tool)
  adminer:
    image: adminer
    restart: always
    ports:
      - "8090:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.rule=Host(`localhost`) && PathPrefix(`/db`)"
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"
    networks:
      - web

volumes:
  postgres_data: {}

networks:
  web:
    driver: bridge
